import os

keys = {
    # aws
    "AWS_DEFAULT_REGION": "ap-southeast-2",
    # beacon variables
    "BEACON_API_VERSION": "BEACON_API_VERSION",
    "BEACON_ID": "BEACON_ID",
    "BEACON_NAME": "BEACON_NAME",
    "BEACON_ENVIRONMENT": "BEACON_ENVIRONMENT",
    "BEACON_DESCRIPTION": "BEACON_DESCRIPTION",
    "BEACON_VERSION": "BEACON_VERSION",
    "BEACON_WELCOME_URL": "BEACON_WELCOME_URL",
    "BEACON_ALTERNATIVE_URL": "BEACON_ALTERNATIVE_URL",
    "BEACON_CREATE_DATETIME": "BEACON_CREATE_DATETIME",
    "BEACON_UPDATE_DATETIME": "BEACON_UPDATE_DATETIME",
    "BEACON_HANDOVERS": "{}",
    "BEACON_DOCUMENTATION_URL": "BEACON_DOCUMENTATION_URL",
    "BEACON_DEFAULT_GRANULARITY": "record",
    "BEACON_URI": "BEACON_URI",
    # organisation variables
    "BEACON_ORG_ID": "BEACON_ORG_ID",
    "BEACON_ORG_NAME": "BEACON_ORG_NAME",
    "BEACON_ORG_DESCRIPTION": "BEACON_ORG_DESCRIPTION",
    "BEACON_ORG_ADDRESS": "BEACON_ORG_ADDRESS",
    "BEACON_ORG_WELCOME_URL": "BEACON_ORG_WELCOME_URL",
    "BEACON_ORG_CONTACT_URL": "BEACON_ORG_CONTACT_URL",
    "BEACON_ORG_LOGO_URL": "BEACON_ORG_LOGO_URL",
    # beacon service variables
    "BEACON_SERVICE_TYPE_GROUP": "BEACON_SERVICE_TYPE_GROUP",
    "BEACON_SERVICE_TYPE_ARTIFACT": "BEACON_SERVICE_TYPE_ARTIFACT",
    "BEACON_SERVICE_TYPE_VERSION": "BEACON_SERVICE_TYPE_VERSION",
    # configurations
    "CONFIG_MAX_VARIANT_SEARCH_BASE_RANGE": "1000",
    "ATHENA_WORKGROUP": "ATHENA_WORKGROUP",
    "ATHENA_METADATA_DATABASE": "ATHENA_METADATA_DATABASE",
    "ATHENA_METADATA_BUCKET": "ATHENA_METADATA_BUCKET",
    "ATHENA_DATASETS_TABLE": "ATHENA_DATASETS_TABLE",
    "ATHENA_DATASETS_CACHE_TABLE": "ATHENA_DATASETS_CACHE_TABLE",
    "ATHENA_INDIVIDUALS_TABLE": "ATHENA_INDIVIDUALS_TABLE",
    "ATHENA_INDIVIDUALS_CACHE_TABLE": "ATHENA_INDIVIDUALS_CACHE_TABLE",
    "ATHENA_BIOSAMPLES_TABLE": "ATHENA_BIOSAMPLES_TABLE",
    "ATHENA_BIOSAMPLES_CACHE_TABLE": "ATHENA_BIOSAMPLES_CACHE_TABLE",
    "ATHENA_RUNS_TABLE": "ATHENA_RUNS_TABLE",
    "ATHENA_RUNS_CACHE_TABLE": "ATHENA_RUNS_CACHE_TABLE",
    "ATHENA_ANALYSES_TABLE": "ATHENA_ANALYSES_TABLE",
    "ATHENA_ANALYSES_CACHE_TABLE": "ATHENA_ANALYSES_CACHE_TABLE",
    "ATHENA_TERMS_TABLE": "ATHENA_TERMS_TABLE",
    "ATHENA_TERMS_INDEX_TABLE": "ATHENA_TERMS_INDEX_TABLE",
    "ATHENA_TERMS_CACHE_TABLE": "ATHENA_TERMS_CACHE_TABLE",
    "ATHENA_RELATIONS_TABLE": "ATHENA_RELATIONS_TABLE",
    "DYNAMO_ONTOLOGIES_TABLE": "DYNAMO_ONTOLOGIES_TABLE",
    "DYNAMO_ANSCESTORS_TABLE": "DYNAMO_ANSCESTORS_TABLE",
    "DYNAMO_DESCENDANTS_TABLE": "DYNAMO_DESCENDANTS_TABLE",
    "DYNAMO_PROJECT_USERS_TABLE": "DYNAMO_PROJECT_USERS_TABLE",
    "DYNAMO_PROJECT_USERS_UID_INDEX": "DYNAMO_PROJECT_USERS_UID_INDEX",
    "DYNAMO_QUOTA_USER_TABLE": "DYNAMO_QUOTA_USER_TABLE",
    "DYNAMO_PROJECTS_TABLE": "DYNAMO_PROJECTS_TABLE",
    "DYNAMO_JUPYTER_INSTANCES_TABLE": "DYNAMO_JUPYTER_INSTANCES_TABLE",
    "DYNAMO_SAVED_QUERIES_TABLE": "DYNAMO_SAVED_QUERIES_TABLE",
    "DYNAMO_CLINIC_JOBS_TABLE": "DYNAMO_CLINIC_JOBS_TABLE",
    "DYNAMO_CLINICAL_ANNOTATIONS_TABLE": "DYNAMO_CLINICAL_ANNOTATIONS_TABLE",
    "DYNAMO_CLINICAL_VARIANTS_TABLE": "DYNAMO_CLINICAL_VARIANTS_TABLE",
    "JUPYTER_LIFECYCLE_CONFIG_NAME": "JUPYTER_LIFECYCLE_CONFIG_NAME",
    "JUPYTER_INSTACE_ROLE_ARN": "JUPYTER_INSTACE_ROLE_ARN",
    # cognito
    "COGNITO_USER_POOL_ID": "COGNITO_USER_POOL_ID",
    "COGNITO_ADMIN_GROUP_NAME": "administrators",
    "COGNITO_REGISTRATION_EMAIL_LAMBDA": "COGNITO_REGISTRATION_EMAIL_LAMBDA",
    # fan outs
    "SPLIT_QUERY_LAMBDA": "SPLIT_QUERY_LAMBDA",
    # s3
    "CLINIC_TEMP_BUCKET_NAMES": "A,B,C",
}

# Set environment variables for testing
for key, value in keys.items():
    os.environ[key] = value
